{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/wilansguitar/frontend/src/pages/Chords/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.css\";\n\n// Data structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chordsData = {\n  C: [{\n    type: \"Major\",\n    image: \"../assets/chords/C.jpg\"\n  }, {\n    type: \"Minor\",\n    image: \"../../assets/chords/Cm.jpg\"\n  }],\n  D: [{\n    type: \"Major\",\n    image: \"../../assets/chords/D.jpg\"\n  }, {\n    type: \"Minor\",\n    image: \"../../assets/chords/Dm.jpg\"\n  }],\n  E: [{\n    type: \"Major\",\n    image: \"../../assets/chords/E.jpg\"\n  }, {\n    type: \"Minor\",\n    image: \"../../assets/chords/Em.jpg\"\n  }]\n  // Add other chords here\n};\nexport default function Chords() {\n  _s();\n  const [selectedChord, setSelectedChord] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chords-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chords-title\",\n      children: \"Guitar Chords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chords\",\n      children: Object.keys(chordsData).map(chord => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `main-chord-btn ${selectedChord === chord ? \"active\" : \"\"}`,\n        onClick: () => setSelectedChord(chord),\n        children: chord\n      }, chord, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), selectedChord && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chord-variations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedChord, \" Chords\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chords-grid\",\n        children: chordsData[selectedChord].map((variation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chord-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: variation.image,\n            alt: `${selectedChord} ${variation.type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: variation.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Chords, \"JbA2cs/s8nMMbz4XBwF1ljki/5M=\");\n_c = Chords;\nvar _c;\n$RefreshReg$(_c, \"Chords\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","chordsData","C","type","image","D","E","Chords","_s","selectedChord","setSelectedChord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","chord","onClick","variation","index","src","alt","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/wilansguitar/frontend/src/pages/Chords/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\n// Data structure\nconst chordsData = {\n  C: [\n    { type: \"Major\", image: \"../assets/chords/C.jpg\" },\n    { type: \"Minor\", image: \"../../assets/chords/Cm.jpg\" },\n  ],\n  D: [\n    { type: \"Major\", image: \"../../assets/chords/D.jpg\" },\n    { type: \"Minor\", image: \"../../assets/chords/Dm.jpg\" },\n  ],\n  E: [\n    { type: \"Major\", image: \"../../assets/chords/E.jpg\" },\n    { type: \"Minor\", image: \"../../assets/chords/Em.jpg\" },\n  ],\n  // Add other chords here\n};\n\nexport default function Chords() {\n  const [selectedChord, setSelectedChord] = useState(null);\n\n  return (\n    <div className=\"chords-page\">\n      <h1 className=\"chords-title\">Guitar Chords</h1>\n\n      {/* Main chords list */}\n      <div className=\"main-chords\">\n        {Object.keys(chordsData).map((chord) => (\n          <button\n            key={chord}\n            className={`main-chord-btn ${\n              selectedChord === chord ? \"active\" : \"\"\n            }`}\n            onClick={() => setSelectedChord(chord)}\n          >\n            {chord}\n          </button>\n        ))}\n      </div>\n\n      {/* Selected chord variations */}\n      {selectedChord && (\n        <section className=\"chord-variations\">\n          <h2>{selectedChord} Chords</h2>\n          <div className=\"chords-grid\">\n            {chordsData[selectedChord].map((variation, index) => (\n              <div key={index} className=\"chord-card\">\n                <img src={variation.image} alt={`${selectedChord} ${variation.type}`} />\n                <p>{variation.type}</p>\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}